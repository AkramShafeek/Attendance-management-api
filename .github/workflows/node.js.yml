# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: echo "Continuous Integration implemented successfully"
    - run: npm test

  docker:
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout
        uses: actions/checkout@v3    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2    
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}    
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: akramshafeek/attendance-management-api:latest  

  # googlecloud:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: code checkout
  #     uses: actions/checkout@v2

  #   - name: install the gcloud cli
  #     uses: google-github-actions/setup-gcloud@v0
  #     with:
  #       project_id: ${{ secrets.GOOGLE_PROJECT }}
  #       service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  #       export_default_credentials: true

  #   - name: build and push the docker image
  #     env:
  #       GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
  #     run: |
  #       gcloud auth configure-docker asia-south1-docker.pkg.dev
  #       docker build -t asia-south1-docker.pkg.dev/fleet-blend-401515/attendance-management-api/backend-api:latest .
  #       docker push asia-south1-docker.pkg.dev/fleet-blend-401515/attendance-management-api/backend-api:latest
